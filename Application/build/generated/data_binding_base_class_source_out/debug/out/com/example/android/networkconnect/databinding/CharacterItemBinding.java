// Generated by view binder compiler. Do not edit!
package com.example.android.networkconnect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android.networkconnect.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CharacterItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView characterImageView;

  @NonNull
  public final MaterialCardView characterItemCardView;

  @NonNull
  public final MaterialCardView characterMaterialCardView;

  @NonNull
  public final TextView characterNameTextView;

  @NonNull
  public final LinearLayout itemLinearLayout;

  private CharacterItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView characterImageView, @NonNull MaterialCardView characterItemCardView,
      @NonNull MaterialCardView characterMaterialCardView, @NonNull TextView characterNameTextView,
      @NonNull LinearLayout itemLinearLayout) {
    this.rootView = rootView;
    this.characterImageView = characterImageView;
    this.characterItemCardView = characterItemCardView;
    this.characterMaterialCardView = characterMaterialCardView;
    this.characterNameTextView = characterNameTextView;
    this.itemLinearLayout = itemLinearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CharacterItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CharacterItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.character_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CharacterItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.characterImageView;
      ImageView characterImageView = ViewBindings.findChildViewById(rootView, id);
      if (characterImageView == null) {
        break missingId;
      }

      id = R.id.characterItemCardView;
      MaterialCardView characterItemCardView = ViewBindings.findChildViewById(rootView, id);
      if (characterItemCardView == null) {
        break missingId;
      }

      id = R.id.characterMaterialCardView;
      MaterialCardView characterMaterialCardView = ViewBindings.findChildViewById(rootView, id);
      if (characterMaterialCardView == null) {
        break missingId;
      }

      id = R.id.characterNameTextView;
      TextView characterNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (characterNameTextView == null) {
        break missingId;
      }

      id = R.id.itemLinearLayout;
      LinearLayout itemLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemLinearLayout == null) {
        break missingId;
      }

      return new CharacterItemBinding((ConstraintLayout) rootView, characterImageView,
          characterItemCardView, characterMaterialCardView, characterNameTextView,
          itemLinearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
